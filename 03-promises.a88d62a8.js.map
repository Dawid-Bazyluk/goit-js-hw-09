{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACzBD,SAASC,cAAc,UAa/BG,iBAAiB,SAASC,IAClCA,EAAEC,iBACF,IAAIC,EAAeC,SAAST,EAAWU,OACvCC,YAAW,KACT,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAYM,MAAOE,IACrCD,YAAW,KAhBjB,IAAuBE,EAAUC,EAAVD,EAiBDD,EAAI,EAjBOE,EAiBJN,EAhBLO,KAAKC,SAAW,GAGpCC,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAqBN,QAAiBC,OAG9DG,EAAAnB,GAASoB,OAAOE,QAAQ,sBAAoBP,QAAeC,OAUnBL,SAASN,EAAUO,OACvDF,GAAgBC,SAASN,EAAUO,MAAM,GACxCD,SAASN,EAAUO,OAASE,EAAE,GAElCH,SAAST,EAAWU,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst createBtn = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\ncreateBtn.addEventListener('click', e => {\n  e.preventDefault();\n  let currentDelay = parseInt(delayInput.value);\n  setTimeout(() => {\n    for (let i = 0; i < amountInput.value; i++) {\n      setTimeout(() => {\n        createPromise(i + 1, currentDelay), parseInt(stepInput.value);\n        currentDelay += parseInt(stepInput.value);\n      }, parseInt(stepInput.value) * i);\n    }\n  }, parseInt(delayInput.value));\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","e","preventDefault","currentDelay","parseInt","value","setTimeout","i","position","delay","Math","random","$parcel$interopDefault","Notify","success","failure"],"version":3,"file":"03-promises.a88d62a8.js.map"}